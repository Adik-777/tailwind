{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shkre\\\\Desktop\\\\React-Udemy\\\\tailwind\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Input from './Input';\nimport formData from '../data/formData';\nimport formDataRadio from '../data/formDataRadio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  inputClasses,\n  isClicked\n}) {\n  _s();\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n  const [checkInput, setCheckInput] = useState(9);\n  console.log(checkInput);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    className: inputClasses,\n    action: \"#\",\n    children: [\"if (isClicked === 0) \", formData.map(e => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        labelClass: e.labelClass,\n        labelName: e.labelName,\n        typeInput: e.typeInput,\n        placeholderInput: e.placeholderInput\n      }, e.placeholderInput, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    }), \"else if (condition) \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Yearly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"i7ZW1BJCSaXZGJ76NJwbvEVtxu8=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Input","formData","formDataRadio","jsxDEV","_jsxDEV","Form","inputClasses","isClicked","_s","onSubmit","e","preventDefault","checkInput","setCheckInput","console","log","className","action","children","map","labelClass","labelName","typeInput","placeholderInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shkre/Desktop/React-Udemy/tailwind/src/components/Form.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Input from './Input';\r\nimport formData from '../data/formData';\r\nimport formDataRadio from '../data/formDataRadio';\r\n\r\nfunction Form({ inputClasses, isClicked }) {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const [checkInput, setCheckInput] = useState(9);\r\n  console.log(checkInput);\r\n  return (\r\n    <form onSubmit={onSubmit} className={inputClasses} action=\"#\">\r\n      if (isClicked === 0) {\r\n        formData.map((e) => {\r\n          return (\r\n            <Input\r\n              labelClass={e.labelClass}\r\n              labelName={e.labelName}\r\n              typeInput={e.typeInput}\r\n              placeholderInput={e.placeholderInput}\r\n              key={e.placeholderInput}\r\n            />\r\n          );\r\n        })\r\n      }\r\n      else if (condition) {\r\n        \r\n      }\r\n      {/* {isClicked === 0\r\n        ? formData.map((e) => {\r\n            return (\r\n              <Input\r\n                labelClass={e.labelClass}\r\n                labelName={e.labelName}\r\n                typeInput={e.typeInput}\r\n                placeholderInput={e.placeholderInput}\r\n                key={e.placeholderInput}\r\n              />\r\n            );\r\n          })\r\n        : formDataRadio.map((item) => {\r\n            return (\r\n              <div key={item.value}>\r\n                <Input\r\n                  checked={item.value === checkInput}\r\n                  labelSpan={item.labelSpan}\r\n                  spanClass={item.spanClass}\r\n                  labelName={item.labelName}\r\n                  labelClass={item.labelClass}\r\n                  nameInput={item.labelName}\r\n                  typeInput={item.typeInput}\r\n                  inputId={item.id}\r\n                  inputValue={item.value}\r\n                  onChange={(e) => setCheckInput(+e.target.value)}\r\n                />\r\n              </div>\r\n            );\r\n          })} */}\r\n      <div className=\"flex\">\r\n        <span>Monthly</span>\r\n        <label></label>\r\n        <span>Yearly</span>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,IAAIA,CAAC;EAAEC,YAAY;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC/Ce,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB,oBACER,OAAA;IAAMK,QAAQ,EAAEA,QAAS;IAACO,SAAS,EAAEV,YAAa;IAACW,MAAM,EAAC,GAAG;IAAAC,QAAA,GAAC,uBACvC,EACnBjB,QAAQ,CAACkB,GAAG,CAAET,CAAC,IAAK;MAClB,oBACEN,OAAA,CAACJ,KAAK;QACJoB,UAAU,EAAEV,CAAC,CAACU,UAAW;QACzBC,SAAS,EAAEX,CAAC,CAACW,SAAU;QACvBC,SAAS,EAAEZ,CAAC,CAACY,SAAU;QACvBC,gBAAgB,EAAEb,CAAC,CAACa;MAAiB,GAChCb,CAAC,CAACa,gBAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAEN,CAAC,CAAC,EACH,sBACmB,eAiCpBvB,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAE,QAAA,gBACnBd,OAAA;QAAAc,QAAA,EAAM;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpBvB,OAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACfvB,OAAA;QAAAc,QAAA,EAAM;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACnB,EAAA,CA7DQH,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA+Db,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}